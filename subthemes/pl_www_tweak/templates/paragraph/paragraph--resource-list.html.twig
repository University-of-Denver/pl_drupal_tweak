{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set hide_filter = elements.field_hide_all_filters.0['#markup'] %}
{% set hide_author_filter = elements.field_hide_author_filter.0['#markup'] %}
{% set hide_date_range_filter = elements.field_hide_date_range_filter.0['#markup'] %}
{% set hide_resource_type = elements.field_hide_resource_type.0['#markup'] %}
{% set hide_resource_keyword = elements.field_hide_resource_keyword.0['#markup'] %}
{% set hide_resource_location = elements.field_hide_resource_location.0['#markup'] %}
{% set hide_associated_unit = elements.field_hide_associated_unit.0['#markup'] %}
{% set hide_owning_unit = elements.field_hide_owning_unit.0['#markup'] %}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    hide_filter == "On" ? 'filters-off',
    hide_author_filter == "On" ? 'author-filter-off',
    hide_date_range_filter == "On" ? 'date_range-filter-off',
    hide_resource_type == "On" ? 'resource-type-filter-off',
    hide_resource_keyword == "On" ? 'resource-keyword-filter-off',
    hide_resource_location == "On" ? 'resource-location-filter-off',
    hide_associated_unit == "On" ? 'resource-associated-unit-filter-off',
    hide_owning_unit == "On" ? 'resource-owning-unit-filter-off',
  ]
%}

{% block paragraph %}
<div id="resource-list">
  <div{{ attributes.addClass(classes) }}>
      {% block content %}
        {{ content|without('field_hide_all_filters','field_hide_author_filter','field_hide_date_range_filter','field_hide_resource_type','field_hide_resource_keyword','field_hide_resource_location','field_hide_associated_unit','field_hide_owning_unit') }}
      {% endblock %}
  </div>
</div>
{% endblock paragraph %}
